name: "Build Darwinia node"

description: "Darwinia artifacts building action."

inputs:
  features:
    description: "build features"
    required: true
  enable_tar_bz2:
    description: "enable package tar.bz2"
    required: false
    default: "false"
  suffix:
    description: "output file suffix"
    required: false
    default: ""
  skip-build:
    description: "use this for testing purposes only"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Build Docker image
      if: ${{ inputs.skip-build != 'true' }}
      uses: docker/build-push-action@v4
      with:
        context: .
        file: .maintain/docker/ubuntu:20.04.Dockerfile
        tags: darwinia-network/build-tool:latest

    - name: Build node
      shell: bash
      run: |
        set -euxo pipefail

        FEATURES="${{ inputs.features }}"
        SUFFIX="${{ inputs.suffix }}"
        ENABLE_TAR_BZ2="${{ inputs.enable_tar_bz2 }}"
        SKIP_BUILD="${{ inputs['skip-build'] }}"

        APP_NAME="darwinia"
        ARCH="x86_64-linux-gnu"
        OUTPUT_BASENAME="${APP_NAME}${SUFFIX:+-$SUFFIX}-$ARCH"
        BUILD_DIR="build"

        if [ "$SKIP_BUILD" != "true" ]; then
            docker run -i --rm \
              --name=build-darwinia \
              -v="$(pwd):/build" \
              darwinia-network/build-tool:latest \
                cargo b --release --locked -p darwinia --features="$FEATURES"
        else
          mkdir -p target/release
          echo SKIP_BUILD > target/release/darwinia
        fi

        mkdir -p "$BUILD_DIR"

        if [ "$ENABLE_TAR_BZ2" = "true" ]; then
          tar cjf "$BUILD_DIR/${OUTPUT_BASENAME}.tar.bz2" -C target/release darwinia
        fi

        tar cf "$BUILD_DIR/${OUTPUT_BASENAME}.tar.zst" -C target/release darwinia -I zstd
